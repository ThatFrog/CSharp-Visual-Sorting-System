<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>